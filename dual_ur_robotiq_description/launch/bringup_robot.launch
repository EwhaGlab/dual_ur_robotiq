<?xml version="1.0"?>
<launch>
  <arg name="debug" default="false" doc="Debug flag that will get passed on to ur_common.launch"/>

  <arg name="left_robot_ip" default="192.168.1.21" doc="IP address by which the robot can be reached."/>
  <arg name="left_reverse_ip" default="" doc="IP of the driver, if set to empty it will detect it automatically."/>
  <arg name="left_reverse_port" default="50001" doc="Port that will be opened by the driver to allow direct communication between the driver and the robot controller."/>
  <arg name="left_script_sender_port" default="50002" doc="The driver will offer an interface to receive the program's URScript on this port. If the robot cannot connect to this port, `External Control` will stop immediately."/>
  <arg name="left_trajectory_port" default="50003" doc="Port that will be opened by the driver to allow trajectory forwarding."/>
  <arg name="left_tf_prefix" default="left_" doc="tf_prefix used for the robot."/>
  <arg name="left_controllers" default="joint_state_controller scaled_pos_joint_traj_controller speed_scaling_state_controller force_torque_sensor_controller" doc="Controllers that are activated by default."/>
  <arg name="left_stopped_controllers" default="pos_joint_traj_controller joint_group_vel_controller" doc="Controllers that are initally loaded, but not started."/>
  <arg name="left_controller_config_file" default="$(find ur_robot_driver)/config/left_ur5e_controllers.yaml" doc="Config file used for defining the ROS-Control controllers."/>
<!--  <arg name="left_kinematics_config" default="$(find ur_description)/config/ur5e/default_kinematics.yaml" doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description."/>
-->
<arg name="left_kinematics_config" default="$(find ur_robot_driver)/config/ur5e_default_kinematics.yaml" doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description."/>


  <arg name="right_robot_ip" default="192.168.1.22" doc="IP address by which the robot can be reached."/>
  <arg name="right_reverse_ip" default="" doc="IP of the driver, if set to empty it will detect it automatically."/>
  <arg name="right_reverse_port" default="60001" doc="Port that will be opened by the driver to allow direct communication between the driver and the robot controller."/>
  <arg name="right_script_sender_port" default="60002" doc="The driver will offer an interface to receive the program's URScript on this port. If the robot cannot connect to this port, `External Control` will stop immediately."/>
  <arg name="right_trajectory_port" default="60003" doc="Port that will be opened by the driver to allow trajectory forwarding."/>
  <arg name="right_tf_prefix" default="right_" doc="tf_prefix used for the robot."/>
  <arg name="right_controllers" default="joint_state_controller scaled_pos_joint_traj_controller speed_scaling_state_controller force_torque_sensor_controller" doc="Controllers that are activated by default."/>
  <arg name="right_stopped_controllers" default="pos_joint_traj_controller joint_group_vel_controller" doc="Controllers that are initally loaded, but not started."/>
  <arg name="right_controller_config_file" default="$(find ur_robot_driver)/config/right_ur5e_controllers.yaml" doc="Config file used for defining the ROS-Control controllers."/>
 <!-- <arg name="right_kinematics_config" default="$(find ur_description)/config/ur5e/default_kinematics.yaml" doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description."/>
-->
<arg name="right_kinematics_config" default="$(find ur_robot_driver)/config/ur5e_default_kinematics.yaml" doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description."/>

  <arg name="use_tool_communication" default="false" doc="On e-Series robots tool communication can be enabled with this argument"/>
  <arg name="tool_voltage" default="0" doc="Tool voltage set at the beginning of the UR program. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_parity" default="0" doc="Parity configuration used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_baud_rate" default="115200" doc="Baud rate used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_stop_bits" default="1" doc="Number of stop bits used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_rx_idle_chars" default="1.5" doc="Number of idle chars in RX channel used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_tx_idle_chars" default="3.5" doc="Number of idle chars in TX channel used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_device_name" default="/tmp/ttyUR" doc="Local device name used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_tcp_port" default="54321" doc="Port on which the robot controller publishes the tool comm interface. Only used, when `use_tool_communication` is set to true."/>
  <arg name="headless_mode" default="true" doc="Automatically send URScript to robot to execute. On e-Series this does require the robot to be in 'remote-control' mode. With this, the URCap is not needed on the robot."/>
  <arg name="robot_description_file" default="$(find dual_ur_robotiq_description)/launch/load_dual_arm.launch" doc="Robot description launch file."/>

  <group ns="left_gripper">
    <param name="robot_description" command="$(find xacro)/xacro '$(find dual_ur_robotiq_description)/urdf/robot.urdf.xacro'" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_relay" type="relay" pkg="topic_tools" args="joint_states /joint_states" />
    <!--<node name="rviz" pkg="rviz" type="rviz" args="-d $(find robotiq_3f_gripper_visualization)/cfg/visualize.rviz" required="true" />-->
  </group>

  <group ns="right_gripper">
    <param name="robot_description" command="$(find xacro)/xacro '$(find dual_ur_robotiq_description)/urdf/robot.urdf.xacro'" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_relay" type="relay" pkg="topic_tools" args="joint_states /joint_states" />
    <!--<node name="rviz" pkg="rviz" type="rviz" args="-d $(find robotiq_3f_gripper_visualization)/cfg/visualize.rviz" required="true" />-->
  </group>

  <group ns="left_arm">
    <include file="$(find ur_robot_driver)/launch/ur_common.launch">
      <arg name="debug" value="$(arg debug)"/>
      <arg name="use_tool_communication" value="$(arg use_tool_communication)"/>
      <arg name="controller_config_file" value="$(arg left_controller_config_file)"/>
      <arg name="robot_description_file" value="$(arg robot_description_file)"/>
      <arg name="kinematics_config" value="$(arg left_kinematics_config)"/>
      <arg name="robot_ip" value="$(arg left_robot_ip)"/>
      <arg name="reverse_port" value="$(arg left_reverse_port)"/>
      <arg name="script_sender_port" value="$(arg left_script_sender_port)"/>
      <arg name="trajectory_port" value="$(arg left_trajectory_port)"/>
     <!-- <arg name="limited" value="$(arg limited)"/>-->
      <arg name="tf_prefix" value="$(arg left_tf_prefix)"/>
      <arg name="controllers" value="$(arg left_controllers)"/>
      <arg name="stopped_controllers" value="$(arg left_stopped_controllers)"/>
      <arg name="headless_mode" value="$(arg headless_mode)"/>
      <arg name="tool_voltage" value="$(arg tool_voltage)"/>
      <arg name="tool_parity" value="$(arg tool_parity)"/>
      <arg name="tool_baud_rate" value="$(arg tool_baud_rate)"/>
      <arg name="tool_stop_bits" value="$(arg tool_stop_bits)"/>
      <arg name="tool_rx_idle_chars" value="$(arg tool_rx_idle_chars)"/>
      <arg name="tool_tx_idle_chars" value="$(arg tool_tx_idle_chars)"/>
      <arg name="tool_device_name" value="$(arg tool_device_name)"/>
      <arg name="tool_tcp_port" value="$(arg tool_tcp_port)"/>
    </include>
    <node name="joint_state_relay" type="relay" pkg="topic_tools" args="joint_states /joint_states" />
   </group>

   <group ns="right_arm">
    <include file="$(find ur_robot_driver)/launch/ur_common.launch">
      <arg name="debug" value="$(arg debug)"/>
      <arg name="use_tool_communication" value="$(arg use_tool_communication)"/>
      <arg name="controller_config_file" value="$(arg right_controller_config_file)"/>
      <arg name="robot_description_file" value="$(arg robot_description_file)"/>
      <arg name="kinematics_config" value="$(arg right_kinematics_config)"/>
      <arg name="robot_ip" value="$(arg right_robot_ip)"/>
      <arg name="reverse_port" value="$(arg right_reverse_port)"/>
      <arg name="script_sender_port" value="$(arg right_script_sender_port)"/>
      <arg name="trajectory_port" value="$(arg right_trajectory_port)"/>
     <!-- <arg name="limited" value="$(arg limited)"/>-->
      <arg name="tf_prefix" value="$(arg right_tf_prefix)"/>
      <arg name="controllers" value="$(arg right_controllers)"/>
      <arg name="stopped_controllers" value="$(arg right_stopped_controllers)"/>
      <arg name="headless_mode" value="$(arg headless_mode)"/>
      <arg name="tool_voltage" value="$(arg tool_voltage)"/>
      <arg name="tool_parity" value="$(arg tool_parity)"/>
      <arg name="tool_baud_rate" value="$(arg tool_baud_rate)"/>
      <arg name="tool_stop_bits" value="$(arg tool_stop_bits)"/>
      <arg name="tool_rx_idle_chars" value="$(arg tool_rx_idle_chars)"/>
      <arg name="tool_tx_idle_chars" value="$(arg tool_tx_idle_chars)"/>
      <arg name="tool_device_name" value="$(arg tool_device_name)"/>
      <arg name="tool_tcp_port" value="$(arg tool_tcp_port)"/>
    </include>
    <node name="joint_state_relay" type="relay" pkg="topic_tools" args="joint_states /joint_states" />
   </group>

</launch>